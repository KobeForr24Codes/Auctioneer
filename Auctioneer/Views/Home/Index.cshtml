@model Auctioneer.ViewModels.MainIndexViewModel
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Welcome to Auctioneer</h1>
    <p class="lead">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    <p><a href="#" class="btn btn-success btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    @foreach (var auction in Model.Auctions)
    {
        <div class="col-md-4">
            <div class="panel panel-success">
                <div class="panel-heading text-center">@auction.ItemName</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <img src="http://support.yumpu.com/en/wp-content/themes/qaengine/img/default-thumbnail.jpg" alt="..." class="img-rounded img-responsive">
                        </div>

                        <div class='col-md-12'>
                            @if (auction.HasBids == false)
                            {
                                <h4 class="text-center"><strong>Bid Price: <span style="color: #18bc9c">$@auction.StartingPrice</span></strong></h4>
                                <h4 class="text-center"><strong>No Bidder Yet</strong></h4>
                                <br />
                            }
                            else
                            {
                                <h4 class="text-center"><strong>Current Bid Price: <span style="color: #18bc9c">$@Model.Bids.Where(a => a.AuctionId == auction.Id).Max(b => b.Amount)</span></strong></h4>
                                <h4 class="text-center"><strong><a href="#">@Model.Bids.Count(b => b.AuctionId == auction.Id) Bids</a></strong></h4>
                                <p class="text-center">
                                    <strong>
                                        Highest Bidder:

                                        <span style="color: #18bc9c">
                                            @{
                                                var bidId = Model.Bids.Where(a => a.AuctionId == auction.Id).Max(b => b.Id);
                                                var userId = Model.Bids.SingleOrDefault(b => b.Id == bidId);
                                            }
                                            @userId.User.FullName
                                        </span>
                                    </strong>
                                </p>
                            }
                            <hr style="height: 1px; border: none; color: #A9A9A9; background-color: #A9A9A9;" />
                            <p class="text-center timeView" id="timeLeftTextView_@auction.Id" data-id="@auction.Id" data-endtime="@auction.EndTime" style="color: #F16f51"></p>
                            <a class="btn btn-success col-md-12" href="@Url.Action("Display", "Bids", new {id = auction.Id})">Bid Now</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@section scripts{
<script>

    function convertUTCDateToLocalDate(date) {
        var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);

        var offset = date.getTimezoneOffset() / 60;
        
        var hours = date.getHours();
        newDate.setHours(hours - offset);

        return newDate;
    }

    function setTimer(endtime, elmnt) {
        getTime(endtime, elmnt);
        setInterval(function () {
            getTime(endtime, elmnt);
        }, 60000);

    }

    function getTime(endtime, elmnt) {
        var currentDate = new Date();
        var dateYear = currentDate.getFullYear();
        var dateMonth = parseInt(currentDate.getMonth());
        var dateDay = currentDate.getDate();
        var dateHour = currentDate.getHours();
        var dateMin = currentDate.getMinutes();
        var dateSec = currentDate.getSeconds();

        var fcurrentDate = new Date(dateYear, dateMonth, dateDay, dateHour, dateMin, dateSec);
        var date = convertUTCDateToLocalDate(new Date(endtime));

        var endDate = new Date(date.getFullYear(), date.getDate(), parseInt(date.getMonth()) + 1, date.getHours(), date.getMinutes(), date.getSeconds());
        var diff = Math.abs(new Date(endDate) - new Date(fcurrentDate));
        var seconds = Math.floor(diff / 1000); //ignore any left over units smaller than a second
        var minutes = Math.floor(seconds / 60);
        var hours = Math.floor((minutes / 60));
        var days = Math.floor(hours / 24);

        //seconds = seconds % 60;
        minutes = minutes % 60;

        if (days > 0) {
            hours = hours - (24 * days);
            $(elmnt).text('Time Left: ' + days + ' Day(s) ' + hours + ' Hrs ' + minutes + ' Mins ');
        }
        if (days <= 0) {
            $(elmnt).text('Time Left: ' + hours + ' Hr(s) ' + minutes + ' Mins ');
        }
        if (hours <= 0) {
            $(elmnt).text('Time Left: ' + minutes + ' Min(s) ');
        }
    }

    $(function () {
        $('.timeView').each(function () {
            var id = $(this).data('id');
            var endtime = $(this).data('endtime');

            setTimer(endtime, this);
        });
    });
</script>
}