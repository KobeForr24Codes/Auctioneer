@using Microsoft.AspNet.Identity
@model Auctioneer.ViewModels.MyBidsViewModel
@{
    ViewBag.Title = "My Bids";
}

<div class="col-md-12 text-center well" style="background: white;"><h1>My Bids</h1></div>

<div class="row">
    @foreach (var bid in Model.Bids)
    {
        
        var auction = Model.Auctions.SingleOrDefault(a => a.Id == bid.AuctionId && !a.IsRemoved);
        if (auction == null)
        {
             
        }
        else
        {
        <div class="col-md-4">
            <div class="panel panel-success">
                <div class="panel-heading text-center">@auction.ItemName</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <img src="@Url.Content(auction.Image)" alt="..." class="img-rounded img-responsive">
                        </div>
                        <div class='col-md-12'>
                            <h4 class="text-center"><strong>Current Bid Price: <span style="color: #18bc9c">$@Model.AllBids.Where(a => a.AuctionId == bid.AuctionId).Max(b => b.Amount)</span></strong></h4>
                            <h4 class="text-center"><strong style="color: #18bc9c">@Model.AllBids.Count(b => b.AuctionId == bid.AuctionId) Bids</strong></h4>
                            <p class="text-center">
                                <strong>
                                    Highest Bidder:
                                    <span style="color: #18bc9c">
                                        @{
                                            var bidId = Model.AllBids.Where(a => a.AuctionId == bid.AuctionId).Max(b => b.Id);
                                            var user = Model.AllBids.SingleOrDefault(b => b.Id == bidId);
                                        }
                                        @user.User.FullName
                                    </span>
                                </strong>
                            </p>
                            <hr style="height: 1px; border: none; color: #A9A9A9; background-color: #A9A9A9;" />
                            @if (@auction.EndTime < DateTime.Now && auction.AwardedId == User.Identity.GetUserId())
                            {
                                <p class="text-center"><span class="label label-success" style="padding: 8px;">You Have Been Awarded</span></p>
                                <a class="btn btn-warning col-md-12" href="@Url.Action("Pay", "Auctions", new {id = auction.Id})">Pay</a>
                            }
                            @if (@auction.EndTime < DateTime.Now && auction.AwardedId == null)
                            {
                                <p class="text-center"><span class="label label-primary" style="padding: 8px;">Time's Up | Pending For Awarding</span></p>
                                <a class="btn btn-success col-md-12" href="@Url.Action("Display", "Bids", new {id = auction.Id})">View Item</a>
                            }
                            @if (@auction.EndTime > DateTime.Now)
                            {
                                <p class="text-center">Ends on: <span style="color: #18bc9c">@($"{auction.EndTime:f}")</span></p>
                                <a class="btn btn-success col-md-12" href="@Url.Action("Display", "Bids", new {id = auction.Id})">Bid</a>
                            }
                               
                        </div>
                    </div>
                </div>
            </div>
        </div>
         }
        
    }
</div>

@section scripts{
    <script>

    //function convertUTCDateToLocalDate(date) {
    //    var newDate = new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000);

    //    var offset = date.getTimezoneOffset() / 60;

    //    var hours = date.getHours();
    //    newDate.setHours(hours - offset);

    //    return newDate;
    //}

    //function setTimer(endtime, elmnt) {
    //    getTime(endtime, elmnt);
    //    setInterval(function () {
    //        getTime(endtime, elmnt);
    //    }, 60000);

    //}

    //function getTime(endtime, elmnt) {
    //    var currentDate = new Date();
    //    var dateYear = currentDate.getFullYear();
    //    var dateMonth = parseInt(currentDate.getMonth());
    //    var dateDay = currentDate.getDate();
    //    var dateHour = currentDate.getHours();
    //    var dateMin = currentDate.getMinutes();
    //    var dateSec = currentDate.getSeconds();

    //    var fcurrentDate = new Date(dateYear, dateMonth, dateDay, dateHour, dateMin, dateSec);
    //    var date = convertUTCDateToLocalDate(new Date(endtime));

    //    var endDate = new Date(date.getFullYear(), date.getDate(), parseInt(date.getMonth()) + 1, date.getHours(), date.getMinutes(), date.getSeconds());
    //    var diff = Math.abs(new Date(endDate) - new Date(fcurrentDate));
    //    var seconds = Math.floor(diff / 1000); //ignore any left over units smaller than a second
    //    var minutes = Math.floor(seconds / 60);
    //    var hours = Math.floor((minutes / 60));
    //    var days = Math.floor(hours / 24);

    //    //seconds = seconds % 60;
    //    minutes = minutes % 60;

    //    if (days > 0) {
    //        hours = hours - (24 * days);
    //        $(elmnt).text('Time Left: ' + days + ' Day(s) ' + hours + ' Hrs ' + minutes + ' Mins ');
    //    }
    //    if (days <= 0) {
    //        $(elmnt).text('Time Left: ' + hours + ' Hr(s) ' + minutes + ' Mins ');
    //    }
    //    if (hours <= 0) {
    //        $(elmnt).text('Time Left: ' + minutes + ' Min(s) ');
    //    }
    //}

    //$(function () {
    //    $('.timeView').each(function () {
    //        var id = $(this).data('id');
    //        var endtime = $(this).data('endtime');

    //        setTimer(endtime, this);
    //    });
    //});
    </script>
}
